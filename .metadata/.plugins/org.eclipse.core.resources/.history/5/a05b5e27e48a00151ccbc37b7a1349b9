import xlrd
import os.path
from os import listdir

proof_path = "C:/Users/Chris Local/OneDrive/Github/python/Assignment5/data_files/sample-reports-NOSENSITIVEINFO"

def define_files():    

    files_totest = [[[] for i in range(2)] for i in range(32)]
    
    files_totest[0][0] = "AbsentAwaitingSeeking.xls"
    files_totest[0][1] = "data_files/templates/TEMPLATE_AbsentAwaitingSeeking.xls"
    
    files_totest[1][0] = "AdvisoryCommittees.xls"
    files_totest[1][1] = "data_files/templates/TEMPLATE_AdvisoryCommittees.xls"
    
    files_totest[2][0] = "AlphabeticIndex.xls"
    files_totest[2][1] = "data_files/templates/TEMPLATE_AlphabeticIndex.xls"
    
    files_totest[3][0] = "CardinalBishopPrefectApostolic.xls"
    files_totest[3][1] = "data_files/templates/TEMPLATE_CardinalBishopPrefectApostolic.xls"
    
    files_totest[4][0] = "DeceasedJesuits.xls"
    files_totest[4][1] = "data_files/templates/TEMPLATE_DeceasedJesuits.xls"
    
    files_totest[5][0] = "DepartedSociety.xls"
    files_totest[5][1] = "data_files/templates/TEMPLATE_DepartedSociety.xls"  
    
    files_totest[6][0] = "FormationStatus.xls"
    files_totest[6][1] = "data_files/templates/TEMPLATE_FormationStatus.xls"
    
    files_totest[7][0] = "IndexofHouses_CDT.xls"
    files_totest[7][1] = "data_files/templates/TEMPLATE_IndexofHouses.xls"
    
    files_totest[8][0] = "IndexofHouses_CFN.xls"
    files_totest[8][1] = "data_files/templates/TEMPLATE_IndexofHouses.xls"
    
    files_totest[9][0] = "IndexofHouses_MAR.xls"
    files_totest[9][1] = "data_files/templates/TEMPLATE_IndexofHouses.xls"
    
    files_totest[10][0] = "IndexofHouses_ORE.xls"
    files_totest[10][1] = "data_files/templates/TEMPLATE_IndexofHouses.xls"
    
    files_totest[11][0] = "IndexofHouses_UCS.xls"
    files_totest[11][1] = "data_files/templates/TEMPLATE_IndexofHouses.xls"
    
    files_totest[12][0] = "IndexofHouses_UNE.xls"
    files_totest[12][1] = "data_files/templates/TEMPLATE_IndexofHouses.xls"
    
    files_totest[13][0] = "IndexofHouses_USA.xls"
    files_totest[13][1] = "data_files/templates/TEMPLATE_IndexofHouses.xls"
    
    files_totest[14][0] = "IndexofHouses_WIS.xls"
    files_totest[14][1] = "data_files/templates/TEMPLATE_IndexofHouses.xls"
    
    files_totest[15][0] = "Jubilarians.xls"
    files_totest[15][1] = "data_files/templates/TEMPLATE_Jubilarians.xls"
    
    files_totest[16][0] = "MiniCatalog - GPSStreet 2016_CDT.xls"
    files_totest[16][1] = "data_files/templates/TEMPLATE_MiniCatalog - GPSStreet 2016.xls"
    
    files_totest[17][0] = "MiniCatalog - GPSStreet 2016_CFN.xls"
    files_totest[17][1] = "data_files/templates/TEMPLATE_MiniCatalog - GPSStreet 2016.xls"
    
    files_totest[18][0] = "MiniCatalog - GPSStreet 2016_MAR.xls"
    files_totest[18][1] = "data_files/templates/TEMPLATE_MiniCatalog - GPSStreet 2016.xls"
    
    files_totest[19][0] = "MiniCatalog - GPSStreet 2016_ORE.xls"
    files_totest[19][1] = "data_files/templates/TEMPLATE_MiniCatalog - GPSStreet 2016.xls"

    files_totest[20][0] = "MiniCatalog - GPSStreet 2016_UCS.xls"
    files_totest[20][1] = "data_files/templates/TEMPLATE_MiniCatalog - GPSStreet 2016.xls"
    
    files_totest[21][0] = "MiniCatalog - GPSStreet 2016_UNE.xls"
    files_totest[21][1] = "data_files/templates/TEMPLATE_MiniCatalog - GPSStreet 2016.xls"
    
    files_totest[22][0] = "MiniCatalog - GPSStreet 2016_USA.xls"
    files_totest[22][1] = "data_files/templates/TEMPLATE_MiniCatalog - GPSStreet 2016.xls"
    
    files_totest[23][0] = "MiniCatalog - GPSStreet 2016_WIS.xls"
    files_totest[23][1] = "data_files/templates/TEMPLATE_MiniCatalog - GPSStreet 2016.xls"
    
    files_totest[24][0] = "ProvCommApostolates.xls"
    files_totest[24][1] = "data_files/templates/TEMPLATE_ProvCommApostolates.xls"
    
    files_totest[25][0] = "ProvincialCommittees.xls"
    files_totest[25][1] = "data_files/templates/TEMPLATE_ProvincialCommittees.xls"
    
    files_totest[26][0] = "ProvinceAddresses.xls"
    files_totest[26][1] = "data_files/templates/TEMPLATE_ProvinceAddresses.xls"
    
    files_totest[27][0] = "ResidentsFromOtherProv.xls"
    files_totest[27][1] = "data_files/templates/TEMPLATE_ResidentsFromOtherProv.xls"
    
    files_totest[28][0] = "ResidingInOtherProvinces.xls"
    files_totest[28][1] = "data_files/templates/TEMPLATE_ResidingInOtherProvinces.xls"
    
    files_totest[29][0] = "SuperiorsByAppointment.xls"
    files_totest[29][1] = "data_files/templates/TEMPLATE_SuperiorsByAppointment.xls"

    files_totest[30][0] = "TranscribedInToProv.xls"
    files_totest[30][0] = "data_files/templates/TEMPLATE_TranscribedInToProv.xls"
    
    files_totest[31][0] = "TranscribedToOther.xls"
    files_totest[31][1] = "data_files/templates/TEMPLATE_TranscribedToOther.xls"
     
    print(files_totest)
    

def compare_files():
    files_existing = set(listdir(proof_path))
    define_files()
    global files_totest
    
    for i in files_totest:
        print(i)
    
files_tested = 0 #Must be present to count number of files tested.   
    
def compare_spreadsheet(path, file, template):
    global files_tested
    files_tested = files_tested + 1
    file_to_test = path + file
    template_to_use = template

    #  TESTs IF FILE EXISTS
    file_exists = os.path.isfile(file_to_test)
    template_exists = os.path.isfile(template_to_use)
    if(file_exists == True and template_exists == True): 
        xl_file = xlrd.open_workbook(file_to_test)
        xl_file_sheet = xl_file.sheet_by_index(0)
        xl_file_columns = xl_file_sheet.ncols
    
        xl_template = xlrd.open_workbook(template_to_use)
        xl_template_sheet = xl_template.sheet_by_index(0)
        xl_template_columns = xl_template_sheet.ncols
    
        if (xl_file_columns == xl_template_columns):
            print("OK    - " + file + "Column numbers for match.")
        else:
            print("ERROR - " + file + ": Column numbers do not match.  File = " + str(xl_file_columns) + ", TEMPLATE = " + str(xl_template_columns))
    else:
        print("ERROR - " + file + ": Problem with the parameters passed for testing")


def file_count():
    print("This will count files and make sure they match!")
 
def spreadsheets_to_qc():
    global files_tested
    print(files_tested)
    files_tested = 0 #Must be at end to reset number of files tested.


compare_files()